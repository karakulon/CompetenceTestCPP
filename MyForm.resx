<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAmArQAJgK0ACYCtwAmArcAJgK3ACYCtwAjA6gAHQOIABoDeAAaA3gAGgN4QhoDd7saA3hCGgN4ABoD
        eAAaA3gAJAKnACMDpQAjA6UAIwOkACEDlwAeA4oAHgOJABwDfgAbA3oAGwN6ABsDeriZiN3/GwN6uBwD
        fAAcA34AHQOBACECmgAgA5UAHwOSAB8DkQAfA40AHgOKAB4DiQAeA4kAHQODABwDgAAcA360mYjd/xwD
        frQcA38/HQODAB4DiAAhApoAIAOVAB8DkgAfA5EAHwONAB4DigAeA4kAHgOJAB4DiAAdA4Q+HQODr5mI
        3f+ZiN3/HQODrx0DhD4eA4gAIQKaACADlQAfA5IAHwORAB8DjQAeA4oEHgOJFx4DiTEeA4lRHgOIqpmI
        3f+ZiN3/fm3C/5mI3f8eA4iqHgOJPCECmgAgA5UAHwOSAB8DkQAfA446HwONpR8DjaUfA42lHwONpZGA
        0/+ejeD/jXzQ/5uK3v+djN//j37R/x8DjaUhApoAIAOVCh8Dk0cfA5J9HwOSl5mI2f+hkOL/oZDi/5KB
        1P9sW6//k4LV/56N4P+llOT/nIve/6KR4v8fA5KfIQKaDiEDmHdZQLi8dGG+52pYr/qikeL/eWi8/6KR
        4v+tnOr/loXW/3dmuv+FdMb/mona/6KR4v+llOT7IQOYlCECnVptVcbDrJvn/5eG1v9sW6//monY/6eW
        5P+BcMT/mYjY/7al7/+vnur/q5rn/56N3P+kk+H/n4zh6yECnXwiAqKCrJrq86yb5/+VhNT/nYza/3hn
        uf+hkN7/rJvn/52M2/+bitn/qZjk/6yb5/+sm+f/rZzo/31m08oiAqJWIwKngbWk7/efjtv/sJ/p/8Oy
        +P+kk97/iHfG/5eG0/+qmeT/r57o/7Cf6f+ZiN3/sJ/p/7Oh7fZAIbaUIwKnHSQCrGOfi+fataTs/8e2
        +/+0o+v/q5rk/8e2+/+0o+v/tKPr/76t8/+0o+v/tKPr/4d2zPxwVtGyJAKsTyQCqwAlArApTC3Dlbqo
        8vS5qO7/t6bs/8q5/v+4p+3/uKft/5mI3f/Kuf7/uqnu/7qo8vVzWdWvJQKwXSUCrgkkAq0AJgKyACYC
        tENNLsaSpZDs17+t9fbDsvb/w7L2/5mI3f/It/36tKHx54py4cFFJcKJJgK0SiUCsgklAq4AJAKtACYC
        tAAmArQAJgK3JyYCt1smArdyJgK3eSYCt3kmArd5JgK3dSYCt2UmArdJJgK2GSYCtAAlArIAJQKuACQC
        rQD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A/8cAAP/HAAD/wwAA/4EAAPgAAADwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAIAD
        AADADwAA//8AAA==
</value>
  </data>
</root>